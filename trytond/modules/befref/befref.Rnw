\documentclass[a4paper]{book}
\usepackage[utf8]{inputenc}
\usepackage{amsmath}
%\usepackage[french]{babel}
%\usepackage[T1]{fontenc}
%\usepackage{amsfonts}
%\usepackage{amssymb}
%\usepackage[table]{xcolor} 
%\usepackage{hyperref} 
%\usepackage{tikz, times}
%\usepackage{fancyvrb}
%\usepackage{booktabs}
%\usepackage{graphicx}
%\usepackage{pgfsys}
%\usepackage{keyval}
%\usepackage{subfig}
%\usepackage{pgf}
%\usepackage{lscape}
%\usepackage{array}
%\usepackage{geometry}
%\usepackage{pdfpages}
%\usepackage{hyperref}
%\usepackage{vwcol}
%\usepackage{graphicx}
%\usepackage{eurosym}
%\usepackage{datatool}

\voffset -2cm
\hoffset 0cm
\oddsidemargin 0cm
\evensidemargin -0.5cm
\textwidth 17cm
\topmargin 1cm
\textheight 24cm
\parindent 0cm
\columnsep 0.7cm

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
<<OptionsGenerales, include=FALSE>>=
opts_chunk$set(concordance=T,include=T,tidy=F, warning=F, comment=F, error=F)
opts_chunk$set(size='normalsize')
opts_chunk$set(fig.path='figures/', dev='pdf')
opts_chunk$set(fig.align='center',fig.show='hold')
options(width=45)
opts_knit$set(eval.after = 'fig.cap') # evaluate fig.cap after the chunk
par(mar=c(0,0,0,0))
@

<<Librairies, echo=FALSE, warning=F, error=F, comment=F, message=F >>=
library(RPostgreSQL)
library(RgoogleMaps)
library(PBSmapping)
library(dismo)
library(odfWeave)
library(ggplot2)
library(DBI)
library(xtable)
library(reshape2)
library(plyr)
library(scales)
library(doBy)
library(gridExtra)
library(gdata)
library(raster)
@

%% <<setWidth, echo = FALSE>>=
%% options(width = 50)
%% drv <- dbDriver("PostgreSQL")
%% con <- dbConnect(drv, dbname="bioecoforest")
%% party <- dbReadTable(con, "party_party")
%% protection <- dbReadTable(con, "protection_area")
%% rs <- dbSendQuery(con, "SELECT DISTINCT cast(row_number() over(order by p.id) AS text) AS num,
%%                   p.id as ID, p.name AS tiers, are.typo AS type, ty.name as statut, are.name AS nom,
%%                   round(cast(ST_Distance(a.geom, are.geom)/1000 AS numeric), 2) AS km,
%%                   ST_X(st_transform(st_centroid(a.geom),4326)) AS TX93, ST_Y(st_transform(st_centroid(a.geom),4326)) AS TY93,
%%                   ST_X(ST_Transform(ST_Centroid(are.geom),4326)) AS X93, ST_Y(ST_Transform(ST_Centroid(are.geom),4326)) AS Y93,                 
%%                   round(cast(st_area(ST_Intersection(ST_Buffer(a.geom,500),are.geom))/10000 AS numeric), 2) AS surface500,
%%                   round(cast(st_area(ST_Intersection(ST_Buffer(a.geom,2000),are.geom))/10000 AS numeric), 2) AS surface2000,
%%                   round(cast(st_area(ST_Intersection(ST_Buffer(a.geom,5000),are.geom))/10000 AS numeric), 2) AS surface5000,
%%                   round(cast(st_area(ST_Intersection(ST_Buffer(a.geom,10000),are.geom))/10000 AS numeric), 2) AS surface10000
%%                   FROM place_place a, protection_area are, party_party p, place_party_rel rel, protection_configuration c,
%%                   protection_type ty 
%%                   WHERE rel.party = p.id AND ty.id = espace AND rel.place = a.id AND ST_Distance(a.geom, are.geom) <= c.value
%%                   ORDER BY tiers, km ASC;")
%% df <- fetch(rs,n=-1)
%% write.table(df[1:20,c(1,3:7)], row.names=FALSE, "/home/pascal/tryton283/trytond/trytond/modules/rapport_environnemental/df.csv",sep=",",dec=".")
%% dbDisconnect(con)
%% rm(con,drv)
%% save(party,protection,df, file="/home/pascal/tryton283/trytond/trytond/modules/rapport_environnemental/TablesBrutesBEF.RData")
%% load("/home/pascal/tryton283/trytond/trytond/modules/rapport_environnemental/TablesBrutesBEF.RData")
%% lat <- df$ty93[1]
%% lon <- df$tx93[1]
%% center = c(lat, lon)
%% marker <- paste("&markers=color:blue|label:I|", lat, sep="")
%% marker <- paste(marker, lon, sep=",")
%% France <- GetMap(center=center, zoom=5, markers = marker, destfile = "/home/pascal/tryton283/trytond/trytond/modules/rapport_environnemental/france1.png", maptype="hybrid")
%% png("/home/pascal/tryton283/trytond/trytond/modules/rapport_environnemental/france2.png", 640, 640)
%% plot.new() 
%% PlotOnStaticMap(France, center=center, add = F)
%% text(lat,lon,df$tiers[1])
%% dev.off() 
%% MyMap <- GetMap(center=center, zoom=11, markers = marker, destfile = "/home/pascal/tryton283/trytond/trytond/modules/rapport_environnemental/MyTile.png", maptype="hybrid")
%% protection <- importShapefile("/home/pascal/tryton283/trytond/trytond/modules/rapport_environnemental/figures/ProtectionWGS84.shp")
%% tampon500 <- importShapefile("/home/pascal/tryton283/trytond/trytond/modules/rapport_environnemental/figures/Tampon500WGS84.shp")
%% tampon2000 <- importShapefile("/home/pascal/tryton283/trytond/trytond/modules/rapport_environnemental/figures/Tampon2000WGS84.shp")
%% tampon5000 <- importShapefile("/home/pascal/tryton283/trytond/trytond/modules/rapport_environnemental/figures/Tampon5000WGS84.shp")
%% tampon10000 <- importShapefile("/home/pascal/tryton283/trytond/trytond/modules/rapport_environnemental/figures/Tampon10000WGS84.shp")
%% png("/home/pascal/tryton283/trytond/trytond/modules/rapport_environnemental/bioecoforests.png",640,640)
%% plot.new()  
%% PlotPolysOnStaticMap(MyMap, protection, lwd=.5, col = rgb(1,1,1,0.4), add = F)
%% PlotPolysOnStaticMap(MyMap, tampon10000, lwd=.5, col = rgb(1,0,0,0.1), add = T)
%% PlotPolysOnStaticMap(MyMap, tampon5000, lwd=.5, col = rgb(1,0,0,0.1), add = T)
%% PlotPolysOnStaticMap(MyMap, tampon2000, lwd=.5, col = rgb(1,0,0,0.2), add = T)
%% PlotPolysOnStaticMap(MyMap, tampon500, lwd=.5, col = rgb(1,0,0,0.3), add = T)
%% text(lat,lon,df$tiers[1])
%% legend("topright", c("Protection","Buffer 500m","Buffer 2000m","Buffer 5000m","Buffer 10000m"), fill = c(rgb(1,1,1,0.4),rgb(1,0,0,0.1),rgb(1,0,0,0.2),rgb(1,0,0,0.3),rgb(1,0,0,0.4) ), title="Légende")
%% dev.off()
%% @
%% 
%% 
%% %<<Initialisation, echo=FALSE, warning=F, error=F, comment=F, message=F >>=
%% %# -------Import des donnees ------
%% %setwd("/home/pascal/tryton283/trytond/trytond/modules/rapport_environnemental/figures")     # répertoire de travail à changer
%% %load("../TablesBrutesBEF.RData")
%% %# -------Extraction--------
%% %Choix <- 1
%% %party <- party[which(party$id==Choix),"Nom"]
%% %df <- subset(df, id==Choix)
%% %
%% %# -------Formats----------
%% %MyTheme <-  theme_bw() +
%% %  theme(axis.text.x  = element_text(size=8), 
%% %        axis.title.x  = element_text(size=9),
%% %        axis.title.y  = element_text(size=9), 
%% %        axis.text.y  = element_text(size=8),
%% %        plot.margin = unit(c(0.1,0.1,0.1,0.1), "cm"))
%% %
%% %@
%% 
%% 
%% %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% 
\begin{document}
hello
%% 
%% \begin{figure}[ht]
%%    \includegraphics[viewport=0bp 0bp 556bp 171bp, width=6cm]{bioecoforest-logotype.png}
%% \end{figure}
%% 
%%  \vspace*{2cm}
%%  
%%  \begin{center}
%%  {\LARGE Tiers n°\Sexpr{Choix} : \Sexpr{df$tiers[1]}}
%%  \end{center}
%% 
%% % Table des matières
%% \tableofcontents
%% \mainmatter
%% 
%% % Table des figures
%% \listoffigures
%% 
%% \chapter{Généralités}
%% 
%% \section{Situation générale du site \Sexpr{df$tiers[1]}}
%% 
%% \begin{figure}[htbp]
%%   \begin{center}
%%   \includegraphics[viewport=0bp 0bp 640bp 640bp, width=12cm]{france2.png}
%%   \caption{Situation générale du site \Sexpr{df$tiers[1]}.}
%%   \end{center}
%% \end{figure}
%% \newpage
%% 
%% \section{Situation localisée du site \Sexpr{df$tiers[1]}}
%% 
%% Les cercles concentriques sont représentés pour les zonages à 500m, 2000m, 5000m et 10000m autour du site \Sexpr{df$tiers[1]}.
%% 
%% \begin{figure}[htbp]
%%   \begin{center}
%%   \includegraphics[viewport=0bp 0bp 640bp 640bp, width=12cm]{bioecoforests.png}
%%   \caption{Situation localisée du site \Sexpr{df$tiers[1]}.}
%%   \end{center}
%% \end{figure}
%% \newpage
%% 
%% \section{Tableau des 20 sites les plus proches susceptibles d'être impactés par \Sexpr{df$tiers[1]}.}
%% 
%% \DTLloaddb{mydb}{df.csv}
%% 
%% \begin{tabular}{|r|p{1.5cm}|p{1.5cm}|p{4cm}|p{5cm}|r<{ km}|}
%% \rowcolor[gray]{0.7}
%% \bfseries Num &
%% \bfseries Tiers &
%% \bfseries Type &
%% \bfseries Statut &
%% \bfseries Nom &
%% \bfseries Distance en %
%% \DTLforeach*{mydb}{%
%% \num=num,\tiers=tiers,\type=type,\statut=statut,\nom=nom,\km=km}{%
%% \\\DTLifoddrow{\rowcolor{gray!10}}{\rowcolor{gray!30}}%
%% \num & \tiers & \type & \statut & \nom & \km}%
%% \end{tabular}
%% 
%% 
%% \section{Graphique représentant les 10 surfaces des statuts de protection, les plus proches dans un rayon de 10 km pour le site \Sexpr{df$tiers[1]}}
%% 
%% <<BilanSurface, echo=FALSE, size='footnotesize', include=TRUE, fig.pos='h', fig.height=7, fig.cap="Surface intersectée des statuts de protection par rayon de buffer par site.", error=F, comment=F, warning=F, message=F>>=
%% Data <- data.frame(df[1:20,c(1,6,12:15)])
%% colnames(Data)<-c("num", "nom", "0.5 km"," 2 km"," 5 km", "10 km")
%% Data.melt <- melt(Data)
%% p <- ggplot(data=Data.melt,aes(x=factor(num),fill=variable))
%% g <- p + geom_bar(aes(weight=value)) + xlab(" ") + ylab(" ") + theme_bw() + coord_flip() + theme(legend.position="bottom")
%% print(g)
%% @
%% 
%% % \begin{landscape} 
%% <<BilanStatut, echo=FALSE, size='footnotesize', include=TRUE, fig.pos='h', fig.height=8, fig.cap="Répartition en surface des statuts de protection, par distance et par typologie d'espaces.", error=F, comment=F, warning=F, message=F>>=
%% Data <- data.frame(df[,c(4,5,12:15)])
%% colnames(Data)<-c("Type", "Statut", "0.5 km"," 2 km"," 5 km", "10 km")
%% tab.m <- melt(Data[,1:6], id=c("Type", "Statut"))
%% ggplot(tab.m, aes(x=variable, y=value, fill=Statut)) + 
%%   geom_bar(stat='identity', position='fill') +  coord_polar(theta = "y") + 
%%   scale_x_discrete("") + theme(axis.title.y=element_blank()) +  
%%   theme(legend.position=c(0.9,0.26)) +
%%   facet_wrap(~Type, ncol=2)
%% @
%% % \begin{landscape} 
%% 
\end{document}
